---
import Layout from '../layouts/Layout.astro';

interface BusLine {
	line: string;
	from: string;
	to: string;
	borderColor: string;
}

const busLines: BusLine[] = [
	{
		line: '1',
		from: 'Abente y Lago',
		to: 'Castrillón',
		borderColor: 'border-[#a50813]'
	},
	{
		line: '1A',
		from: 'Abente y Lago',
		to: 'A Pasaxe',
		borderColor: 'border-[#e46078]'
	},
	{
		line: '2',
		from: 'Abente y Lago',
		to: 'Os Castros',
		borderColor: 'border-[#dea21c]'
	},
	{
		line: '2A',
		from: 'Abente y Lago',
		to: 'H. Oza-As Xubias',
		borderColor: 'border-[#dcbb78]'
	},
]
---
<Layout title="Bus lines of A Coruña">
	<main class="min-h-[100vh] min-w-full flex items-center justify-center">
		<div class="w-1/2 bg-slate-50 z-10 p-12 rounded-3xl shadow-xl flex flex-col items-center justify-center">
			<h1 class="text-4xl font-bold text-blue-700">Bus lines of A Coruña</h1>
			<p class="text-center text-slate-400 text-sm w-2/3 pt-4">This is a demo site, testing out Astro's implementation of the View Transition API, providing SPA-like navigation experience on a multi-page application.</p>
			<div class="table-auto pt-12 w-2/3 space-y-4">
				{busLines.map(b => {
					return (<div class="text-lg flex items-center">
						<div transition:name="test" class={`h-10 w-10 font-bold text-lg rounded-full border-4 ${b.borderColor} flex items-center justify-center`}>{b.line}</div>
						<a class="pl-4 hover:underline cursor-pointer hover:text-blue-700" href={`/lines/1`}>{b.from} - {b.to}</a>
					</div>);
				})}
			</div>
		</div>
	</main>
</Layout>
